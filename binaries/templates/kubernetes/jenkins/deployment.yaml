apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: jenkins
  labels:
    app: jenkins
spec:
  selector:
    matchLabels:
      app: jenkins
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      serviceAccountName: jenkins-sa
      containers:
      - name: jenkins
        image: jenkins/jenkins:lts
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        env:
        # Read the configuration-as-code from the ConfigMap
        - name: CASC_JENKINS_CONFIG
          value: /var/jenkins_config/configuration-as-code.yaml
        - name: JAVA_OPTS
          value: -Xmx2048m -Dhudson.slaves.NodeProvisioner.MARGIN=50 -Dhudson.slaves.NodeProvisioner.MARGIN0=0.85
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 50000
          protocol: TCP
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins
        - mountPath: /var/jenkins_config
          name: jenkins-configuration-as-code
              
        # - mountPath: /var/run/docker.sock
        #   name: docker-sock
        # livenessProbe:
        #   httpGet:
        #     path: /login
        #     port: 8080
        #   initialDelaySeconds: 60
        #   timeoutSeconds: 5
        #   failureThreshold: 12 # ~2 minutes
        # readinessProbe:
        #   httpGet:
        #     path: /login
        #     port: 8080
        #   initialDelaySeconds: 60
        #   timeoutSeconds: 5
        #   failureThreshold: 12 # ~2 minutes
      restartPolicy: Always
      securityContext:
        runAsUser: 0 #65532 #0
      terminationGracePeriodSeconds: 30
      volumes:
      - name: jenkins
        persistentVolumeClaim:
          claimName: jenkins-pvc1
      # The configuration-as-code ConfigMap
      - name: jenkins-configuration-as-code
        configMap:
          name: jenkins-configuration-as-code
      # - name: docker-sock
      #   hostPath:
      #     path: /var/run/docker.sock
        